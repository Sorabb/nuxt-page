import{Q as V,a2 as _,az as y,aA as w,a3 as O,I as b,a4 as I,r as g,i as B,K as E}from"./CCh7IYkm.js";function K(e){for(var n=-1,s=e==null?0:e.length,r={};++n<s;){var c=e[n];r[c[0]]=c[1]}return r}const J=e=>e===void 0,T=e=>typeof e=="boolean",D=e=>typeof e=="number",F=e=>typeof Element>"u"?!1:e instanceof Element,G=e=>V(e)?!Number.isNaN(Number(e)):!1,h="__epPropKey",Q=e=>e,j=e=>_(e)&&!!e[h],x=(e,n)=>{if(!_(e)||j(e))return e;const{values:s,required:r,default:c,type:l,validator:d}=e,p={type:l,required:!!r,validator:s||d?m=>{let u=!1,f=[];if(s&&(f=Array.from(s),y(e,"default")&&f.push(c),u||(u=f.includes(m))),d&&(u||(u=d(m))),!u&&f.length>0){const $=[...new Set(f)].map(N=>JSON.stringify(N)).join(", ");w(`Invalid prop: validation failed${n?` for prop "${n}"`:""}. Expected one of [${$}], got value ${JSON.stringify(m)}.`)}return u}:void 0,[h]:!0};return y(e,"default")&&(p.default=c),p},U=e=>K(Object.entries(e).map(([n,s])=>[n,x(s,n)])),H=(e,n)=>{if(e.install=s=>{for(const r of[e,...Object.values(n??{})])s.component(r.name,r)},n)for(const[s,r]of Object.entries(n))e[s]=r;return e},L=(e,n)=>(e.install=s=>{e._context=s._context,s.config.globalProperties[n]=e},e),M=e=>(e.install=O,e),R=["","default","small","large"],v="el",C="is-",i=(e,n,s,r,c)=>{let l=`${e}-${n}`;return s&&(l+=`-${s}`),r&&(l+=`__${r}`),c&&(l+=`--${c}`),l},S=Symbol("namespaceContextKey"),q=e=>{const n=e||(b()?I(S,g(v)):g(v));return B(()=>E(n)||v)},W=(e,n)=>{const s=q(n);return{namespace:s,b:(t="")=>i(s.value,e,t,"",""),e:t=>t?i(s.value,e,"",t,""):"",m:t=>t?i(s.value,e,"","",t):"",be:(t,a)=>t&&a?i(s.value,e,t,a,""):"",em:(t,a)=>t&&a?i(s.value,e,"",t,a):"",bm:(t,a)=>t&&a?i(s.value,e,t,"",a):"",bem:(t,a,o)=>t&&a&&o?i(s.value,e,t,a,o):"",is:(t,...a)=>{const o=a.length>=1?a[0]:!0;return t&&o?`${C}${t}`:""},cssVar:t=>{const a={};for(const o in t)t[o]&&(a[`--${s.value}-${o}`]=t[o]);return a},cssVarName:t=>`--${s.value}-${t}`,cssVarBlock:t=>{const a={};for(const o in t)t[o]&&(a[`--${s.value}-${e}-${o}`]=t[o]);return a},cssVarBlockName:t=>`--${s.value}-${e}-${t}`}};var X=(e,n)=>{const s=e.__vccOpts||e;for(const[r,c]of n)s[r]=c;return s};export{X as _,T as a,U as b,R as c,Q as d,F as e,K as f,L as g,x as h,D as i,q as j,M as k,G as l,J as m,v as n,S as o,W as u,H as w};
